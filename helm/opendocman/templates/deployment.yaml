apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "opendocman.fullname" . }}
  labels:
    {{- include "opendocman.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "opendocman.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "opendocman.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "opendocman.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: appconfig
        persistentVolumeClaim:
          claimName: {{ include "opendocman.fullname" . }}-appconfig
      - name: appdata
        persistentVolumeClaim:
          claimName: {{ include "opendocman.fullname" . }}-appdata
      initContainers:
      - name: docpermfix
        image: busybox:latest
        command: ["sh","-c","mkdir -p /var/www/document_repository/docs && chown -R 1000:1000 /var/www/document_repository/docs"]
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
        volumeMounts:
          - name: appdata
            mountPath: /var/www/document_repository
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_PORT
              value: "{{ .Values.opendocman.dbport }}"
            - name: APP_DB_NAME
              value: "{{ .Values.opendocman.dbname }}"
            - name: APP_DB_USER
              value: "{{ .Values.opendocman.dbuser }}"
            - name: APP_DB_PASS
              value: "{{ .Values.opendocman.dbpass }}"
            - name: ODM_DATA_DIR
              value: "{{ .Values.opendocman.docdir }}"
            - name: IS_DOCKER
              value: "true"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
          - mountPath: {{ .Values.opendocman.docdir }}
            name: appdata
          - mountPath: /var/www/html/docker-configs
            name: appconfig
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}